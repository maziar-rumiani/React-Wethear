{"version":3,"sources":["components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","props","trigger","className","onClick","setTrigger","children","api","App","useState","temp","setTemp","degree","setDegree","popupBtn","setPopupBtn","query","setQuery","weather","setWeather","main","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","Math","round","error","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","cTemp","fTemp","humidity","wind","speed","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc7e9562.chunk.js","sourcesContent":["import \"./Popup.css\"\r\n\r\nconst Popup = (props) => {\r\n    return (props.trigger)?( \r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\">\r\n                <button className=\"close-btn\" onClick={()=>props.setTrigger(false)}>Close</button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n     ):'';\r\n}\r\n \r\nexport default Popup;","import { useState } from \"react\";\nimport Popup from \"./components/Popup\";\n\nconst api = {\n  key:\"ef67dc350e67704af20b2fd758d6883d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n\n  const [temp,setTemp]=useState(null);\n  const [degree,setDegree]=useState('F');\nconst [popupBtn,setPopupBtn] = useState(false)\n\n   const[query,setQuery]=useState('')\n   const[weather,setWeather]=useState({});\n   const search = evt => {\n     if(evt.key === 'Enter'){\n       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n       .then(res => res.json())\n       .then(result => {\n         setWeather(result);\n         setQuery('');\n        //  console.log(result);\n        try {\n          \n          setTemp( (result.main.temp!=\"undefined\")?`Temperature: ${Math.round(result.main.temp)}째C`:'')\n        } catch (error) {\n          // errorMessage()\n          setPopupBtn(true)\n        } \n        //  console.log(Math.round(result.main.temp));\n      });\n       }\n   }\n\n    const  dateBuilder = (d)=> {\n      let months = [\"January\",\"Fabruary\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\n    \"September\",\"October\",\"November\",\"December\"];\n      let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednsday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      let day = days[d.getDay()];\n      let date =d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n           \n      // setTemp( `Temperature: ${Math.round(weather.main.temp)}째C`)\n\n      return `${day} ${date} ${month} ${year}`\n    }\n\n    const handleTemp = ()=>{\n      const cTemp = Math.round(weather.main.temp);\n      const fTemp = Math.round((cTemp*1.8) + 32)\n       if(degree==='F'){\n        setDegree('C')\n        setTemp(`Temperature: ${fTemp}째F`)\n      }\n      else{\n        setDegree('F')\n        setTemp(`Temperature: ${cTemp}째C`)\n      }\n    }\n    \n    \n    \n    \n    \n    return (\n      <div className={(typeof weather.main !=\"undefined\")?((weather.main.temp >20)?'app warm':'app'):'app'}>\n       <main>\n         <div className=\"search-box\">\n           <input type=\"text\"\n           className=\"search-bar\"\n           placeholder=\"Search ...\"\n           onChange={e => setQuery(e.target.value)}\n           value={query}\n           onKeyPress={search}/>\n         </div>\n         {(typeof weather.main !=\"undefined\")?(\n           <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name},{weather.sys.country}\n              </div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{temp}<button className=\"degree\" onClick={handleTemp}>{degree}</button>\n              </div>\n              <div className=\"temp\">Humidity: {Math.round(weather.main.humidity)}%\n              </div>\n              <div className=\"temp\">Wind: {Math.round(weather.wind.speed)}km/h\n              </div>\n              <div className=\"weather\">{weather.weather[0].description}\n              </div>\n            </div>\n          </div>\n         ):(  <Popup trigger={popupBtn } setTrigger={setPopupBtn}>Invalid city name</Popup>\n          )}\n       </main>\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}